# ===================================================================
# run_beamOn.mac
#
# 목적: run_single.mac의 루프에 의해 호출되는 최하위 매크로.
#       외부에서 전달받은 변수 {distance}와 {angle}을 사용하여
#       지오메트리를 설정하고, 단일 런을 실행한다.
# ===================================================================

# --- 현재 진행 상황을 터미널에 출력 ---
/control/echo " "
/control/echo "--- Running for Distance = {distance} cm, Angle = {angle} deg ---"

# --- 1. 파일 이름 설정 ---
# 각 런의 결과를 별도의 n-tuple(TTree)에 저장하기 위해 이름을 설정한다.
# 이렇게 하면 하나의 ROOT 파일 안에 모든 결과가 체계적으로 저장된다.
/analysis/setNtupleFileName 0 "data_dist_{distance}_angle_{angle}"

# --- 2. 지오메트리 파라미터 설정 ---
# 외부 루프에서 전달된 {distance}와 {angle} 변수 값을 사용한다.
# 단위(cm, deg)를 명시해주는 것이 좋다.
/myApp/detector/setDistance {distance} cm
/myApp/detector/setMovableAngle {angle} deg

# --- 3. 시뮬레이션 실행 ---
# [!!!핵심!!!]
# C++ 코드의 Setter 함수가 GeometryHasBeenModified()를 호출했기 때문에,
# 별도의 /run/initialize 없이 /run/beamOn을 바로 실행하면
# Geant4가 자동으로 변경된 지오메트리를 적용하여 시뮬레이션을 시작한다.
/run/beamOn 100000

# --- 4. 시각화 업데이트 (GUI 모드에서만 유효) ---
# 지오메트리가 변경되었으므로 뷰어를 새로고침해야 한다.
/vis/viewer/refresh
/vis/drawVolume
